package com.cchtw.sfy.activity;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.AsyncTask;import android.os.Bundle;import android.text.TextUtils;import android.view.View;import android.widget.Button;import android.widget.ImageView;import com.alibaba.fastjson.JSON;import com.cchtw.sfy.R;import com.cchtw.sfy.api.ApiRequest;import com.cchtw.sfy.api.JsonHttpHandler;import com.cchtw.sfy.uitls.BitmapHelper;import com.cchtw.sfy.uitls.Constant;import com.cchtw.sfy.uitls.SharedPreferencesHelper;import com.cchtw.sfy.uitls.ToastHelper;import com.cchtw.sfy.uitls.cache.ACache;import com.cchtw.sfy.uitls.dialog.AlertDialogHelper;import com.cchtw.sfy.uitls.dialog.ChooseDialogDoClickHelper;import com.cchtw.sfy.uitls.dialog.DialogHelper;import com.cchtw.sfy.uitls.dialog.ProgressDialogDoClickHelper;import com.itech.message.APP_120008;import com.itech.message.APP_120028;import com.itech.message.FileMsg;import com.itech.message.Result_120023;import com.itech.utils.HashCodeUtils;import com.itech.utils.ZipDataUtils;import com.itech.utils.encoder.Base64Utils;import com.loopj.android.http.RequestHandle;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;public class TakeBankCardPhotoActivity extends BaseActivity {    private String returnAction = "android.intent.action.MAIN";    private String resultAction = "";    private Result_120023 mResult;    private String mBankCardFrontFilePath = "";    private String mBankCardBackFilePath = "";    private String mFrontBankCardFileId;    private String mBackBankCardFileId;    private static final int TAKE_PICTURE3 = 0x000003;    private static final int TAKE_PICTURE4 = 0x000004;    private String frontBase64Content = "";    private String backBase64Content = "";    private ImageView mIvFront;    private ImageView mIvBack;    private Button mBtnUpload;    private int mDownloadCount = 0;    private RequestHandle mRequestHandleDownload;    private RequestHandle mRequestHandle;    APP_120008 attachPost;    private ACache aCache;    protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_take_bankpic);        Intent intent = TakeBankCardPhotoActivity.this.getIntent();        Bundle bundle = intent.getExtras();        mResult = (Result_120023) bundle.get("info");        mFrontBankCardFileId = bundle.getString("mFrontBankCardFileId", "");        mBackBankCardFileId = bundle.getString("mBackBankCardFileId", "");        aCache = ACache.get(TakeBankCardPhotoActivity.this);        assignViews();		initData();        setCanBack(true);        starToDownload();	}	private void assignViews() {		mIvFront = (ImageView) findViewById(R.id.iv_front);		mIvBack = (ImageView) findViewById(R.id.iv_back);		mBtnUpload = (Button) findViewById(R.id.btn_upload);	}	private void initData() {		mBtnUpload.setOnClickListener(this);		mIvBack.setOnClickListener(this);		mIvFront.setOnClickListener(this);	}    private void starToDownload(){        if (!TextUtils.isEmpty(mFrontBankCardFileId) && !TextUtils.isEmpty(mBackBankCardFileId)){            mBtnUpload.setVisibility(View.GONE);            mIvBack.setEnabled(false);            mIvFront.setEnabled(false);            Bitmap bitmapFront = aCache.getAsBitmap(mResult.getIdCard() + mFrontBankCardFileId);            Bitmap bitmapBack = aCache.getAsBitmap(mResult.getIdCard() + mBackBankCardFileId);            if (bitmapFront != null && bitmapBack != null){                mIvFront.setImageBitmap(bitmapFront);                mIvBack.setImageBitmap(bitmapBack);            }else {                DialogHelper.showProgressDialog(TakeBankCardPhotoActivity.this, "正在下载附件，请稍候...", new ProgressDialogDoClickHelper() {                            @Override                            public void doClick() {                                if(mRequestHandleDownload != null){                                    mRequestHandleDownload.cancel(true);                                }                            }                        },                        true, false);                downLoadFile(mFrontBankCardFileId, 1);                downLoadFile(mBackBankCardFileId,2);            }        }    }    Bitmap bitmap;    private void downLoadFile(final String mFileId, final int index){        APP_120028 app120028 = new APP_120028();        app120028.setTrxCode("120028");        app120028.setUserName(SharedPreferencesHelper.getString(Constant.PHONE, ""));        FileMsg file = new FileMsg();        file.setFileId(mFileId);        app120028.setFileMsg(file);        mRequestHandleDownload = ApiRequest.requestData(app120028, SharedPreferencesHelper.getString(Constant.PHONE, ""), new JsonHttpHandler(TakeBankCardPhotoActivity.this) {            @Override            public void onDo(JSONObject responseJsonObject) {                APP_120028 result = JSON.parseObject(responseJsonObject.toString(), APP_120028.class);                FileMsg fileMsg = result.getFileMsg();                String contentString = "";                if (fileMsg == null) {                    return;                }                contentString = result.getFileMsg().getContent();                byte[] content = contentString.getBytes();                bitmap = BitmapHelper.getBitmapFromByte(content);                if (index == 1) {                    mIvFront.setImageBitmap(bitmap);                    mIvFront.setScaleType(ImageView.ScaleType.FIT_XY);                    aCache.put(mResult.getIdCard() + mFrontBankCardFileId, bitmap, ACache.TIME_CACHE);                } else {                    mIvBack.setImageBitmap(bitmap);                    mIvBack.setScaleType(ImageView.ScaleType.FIT_XY);                    aCache.put(mResult.getIdCard() + mBackBankCardFileId, bitmap, ACache.TIME_CACHE);                }                mDownloadCount++;            }            @Override            public void onDo(JSONArray responseJsonArray) {            }            @Override            public void onDo(String responseString) {            }            @Override            public void onFinish() {                if (mDownloadCount == 2) {                    DialogHelper.dismissProgressDialog();                }            }        });    }	@Override	public void onClick(View arg0) {        super.onClick(arg0);		switch (arg0.getId()) {            case R.id.btn_upload:                if (TextUtils.isEmpty(mBankCardFrontFilePath) || TextUtils.isEmpty(mBankCardBackFilePath)) {                    ToastHelper.ShowToast("请先拍完所需照片");                } else {                    upLoadImage();                }                break;            case R.id.iv_front:                takeBankCardPhoto(TAKE_PICTURE3);                break;            case R.id.iv_back:				takeBankCardPhoto(TAKE_PICTURE4);                break;            default:                break;		}	}    private void upLoadImage() {        DialogHelper.showProgressDialog(TakeBankCardPhotoActivity.this, "正在上传，请稍候...", new ProgressDialogDoClickHelper() {                    @Override                    public void doClick() {                        if(mRequestHandle != null){                            mRequestHandle.cancel(true);                        }                    }                },                true, false);        UpLoadImageTask downloadTask = new UpLoadImageTask(TakeBankCardPhotoActivity.this);        downloadTask.execute();    }    class UpLoadImageTask extends AsyncTask<APP_120008,Integer,APP_120008> {        public UpLoadImageTask(Context context) {        }        @Override        protected void onPreExecute() {            super.onPreExecute();        }        @Override        protected APP_120008 doInBackground(APP_120008...APP_120008) {            if (attachPost == null){                attachPost = new APP_120008();                attachPost.setAccountNo(mResult.getAccountNo());                attachPost.setIdCard(mResult.getIdCard());                attachPost.setMerchantId(mResult.getMerchantId());                attachPost.setTrxCode("120008");                attachPost.setUserName(SharedPreferencesHelper.getString(Constant.PHONE, ""));                List<FileMsg> list = new ArrayList<FileMsg>();                FileMsg fileMsgFont = new FileMsg();                FileMsg fileMsgBack = new FileMsg();                attachPost.setVerifyItem("BANK_CARD_PHOTO");                try {                    if ("" == frontBase64Content) {                        frontBase64Content = new String(                                ZipDataUtils.zipForBase64(Base64Utils                                        .fileToByte(mBankCardFrontFilePath)));                    }                    fileMsgFont.setContent(frontBase64Content);                    fileMsgFont.setFileName("正面.jpg");                    fileMsgFont.setIndex("0");                    fileMsgFont.setAttachSecurCode(HashCodeUtils.hashCodeVaule(                            frontBase64Content.hashCode(),                            SharedPreferencesHelper.getString(Constant.UUID, "")));                    list.add(fileMsgFont);                    if ("" == backBase64Content) {                        backBase64Content = new String(                                ZipDataUtils.zipForBase64(Base64Utils                                        .fileToByte(mBankCardBackFilePath)));                    }                    fileMsgBack.setContent(backBase64Content);                    fileMsgBack.setFileName("反面.jpg");                    fileMsgBack.setIndex("1");                    fileMsgBack.setAttachSecurCode(HashCodeUtils.hashCodeVaule(                            backBase64Content.hashCode(),                            SharedPreferencesHelper.getString(Constant.UUID, "")));                    list.add(fileMsgBack);                } catch (Exception e) {                    e.printStackTrace();                }                attachPost.setFileList(list);                return attachPost;            }else {                return attachPost;            }        }        @Override        protected void onPostExecute(APP_120008 attachPost) {            UpLoadAttach(attachPost);        }        @Override        protected void onProgressUpdate(Integer... values) {        }        @Override        protected void onCancelled() {            super.onCancelled();        }        @Override        protected void onCancelled(APP_120008 s) {            super.onCancelled(s);        }    }    private void UpLoadAttach(final APP_120008 post) {        mRequestHandle = ApiRequest.requestData(post, SharedPreferencesHelper.getString(Constant.PHONE, ""), new JsonHttpHandler(TakeBankCardPhotoActivity.this) {            @Override            public void onDo(JSONObject responseJsonObject) {                APP_120008 mReturnApp = JSON.parseObject(responseJsonObject.toString(), APP_120008.class);                if ("0000".equals(mReturnApp.getDetailCode())) {                    ToastHelper.ShowToast("上传成功",1);                    if (mReturnApp.getFileList().size()>1){                        byte[] content = post.getFileList().get(0).getContent().getBytes();                        Bitmap bitmap = BitmapHelper.getBitmapFromByte(content);                        aCache.put(mResult.getIdCard() + mReturnApp.getFileList().get(0).getFileId(), bitmap, ACache.TIME_CACHE);                        byte[] contentBack = post.getFileList().get(1).getContent().getBytes();                        Bitmap bitmapBack = BitmapHelper.getBitmapFromByte(contentBack);                        aCache.put(mResult.getIdCard() + mReturnApp.getFileList().get(1).getFileId(), bitmapBack, ACache.TIME_CACHE);                    }                    TakeBankCardPhotoActivity.this.finish();                } else {                    ToastHelper.ShowToast("提示："+mReturnApp.getDetailInfo(),1);                }            }            @Override            public void onDo(JSONArray responseJsonArray) {            }            @Override            public void onDo(String responseString) {            }            @Override            public void onFail(String msg) {                ToastHelper.ShowToast("提示:"+msg,1);            }            @Override            public void onFinish() {                DialogHelper.dismissProgressDialog();            }        });    }    private void takeBankCardPhoto(int requestCode){        Intent intentTack = new Intent(TakeBankCardPhotoActivity.this, CardScanCameraActivity.class);        intentTack.putExtra("devCode", Constant.devcode);        intentTack.putExtra("CopyrightInfo", "");        intentTack.putExtra("ReturnAciton", returnAction);        intentTack.putExtra("ResultAciton", resultAction);        startActivityForResult(intentTack, requestCode);    }	@Override	protected void onDestroy() {		super.onDestroy();	}    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == TAKE_PICTURE3 && resultCode == RESULT_OK){            mBankCardFrontFilePath = data.getStringExtra("Path");            if (TextUtils.isEmpty(mBankCardFrontFilePath)) {                ToastHelper.ShowToast("图片路径错误");            }else {                int l = data.getIntExtra("l", -1);                int t = data.getIntExtra("t", -1);                int w = data.getIntExtra("w", -1);                int h = data.getIntExtra("h", -1);                Bitmap bitmap = null;                try {                    bitmap = BitmapFactory.decodeFile(mBankCardFrontFilePath);                    bitmap = Bitmap.createBitmap(bitmap, l, t, w, h);                } catch (Exception e) {                    e.printStackTrace();                }                if (bitmap != null) {                    mIvFront.setImageBitmap(bitmap);                }            }        }else if (requestCode == TAKE_PICTURE4 && resultCode == RESULT_OK){            Bundle bundle = data.getExtras();            mBankCardBackFilePath = bundle.getString("Path");            if (TextUtils.isEmpty(mBankCardBackFilePath)) {                ToastHelper.ShowToast("图片路径错误");            }else {                int l = data.getIntExtra("l", -1);                int t = data.getIntExtra("t", -1);                int w = data.getIntExtra("w", -1);                int h = data.getIntExtra("h", -1);                Bitmap bitmap = null;                try {                    bitmap = BitmapFactory.decodeFile(mBankCardBackFilePath);                    bitmap = Bitmap.createBitmap(bitmap, l, t, w, h);                } catch (Exception e) {                    e.printStackTrace();                }                if (bitmap != null) {                    mIvBack.setImageBitmap(bitmap);                }            }        }    }    @Override    public void onBackPressed() {        if (TextUtils.isEmpty(mBankCardFrontFilePath) && TextUtils.isEmpty(mBankCardBackFilePath)) {            TakeBankCardPhotoActivity.this.finish();        } else if (!TextUtils.isEmpty(mFrontBankCardFileId) && !TextUtils.isEmpty(mBackBankCardFileId)){            TakeBankCardPhotoActivity.this.finish();        }else {            AlertDialogHelper.showAlertDialog(TakeBankCardPhotoActivity.this,                    "提示：", "图片还未上传,是否退出?", new ChooseDialogDoClickHelper() {                        @Override                        public void doClick(DialogInterface dialog,                                            int which) {                            TakeBankCardPhotoActivity.this.finish();                        }                    });        }    }    @Override    public void goBack(View view) {        if (TextUtils.isEmpty(mBankCardFrontFilePath) && TextUtils.isEmpty(mBankCardBackFilePath)) {            TakeBankCardPhotoActivity.this.finish();        } else if (!TextUtils.isEmpty(mFrontBankCardFileId) && !TextUtils.isEmpty(mBackBankCardFileId)){            TakeBankCardPhotoActivity.this.finish();        }else {            AlertDialogHelper.showAlertDialog(TakeBankCardPhotoActivity.this,                    "提示：", "图片还未上传,是否退出?", new ChooseDialogDoClickHelper() {                        @Override                        public void doClick(DialogInterface dialog,                                            int which) {                            TakeBankCardPhotoActivity.this.finish();                        }                    });        }    }}