package com.example.shoufuyi.uitls.view.photo;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Matrix;import android.media.ExifInterface;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;/**   *  * Description:处理有些机型拍照照片被旋转了的问题 * Created by Fu.H.L on  * Date:2015-9-20-上午12:45:09 * Copyright © 2015年 Fu.H.L All rights reserved. */public class PicChamfer {    /**     * 调整EXIF旋转度数,覆盖原文件     * @param f     */    public static void rotatePic(File f){        int digree = getBitmapDegree(f.getAbsolutePath());        if(digree != 0){            Bitmap bitmap = rotateBitmapByDegree(getPicture(f),digree);            //IOUtil.saveImage(bitmap, f);            f.delete();            try {                FileOutputStream out = new FileOutputStream(f);                bitmap.compress(Bitmap.CompressFormat.PNG, 90, out);                out.flush();                out.close();            } catch (Exception e) {                e.printStackTrace();            }                    }    }    /**     * 读取图片的旋转的角度     *     * @param path     *            图片绝对路径     * @return 图片的旋转角度     */    private static int getBitmapDegree(String path) {        int degree = 0;        try {            // 从指定路径下读取图片，并获取其EXIF信息            ExifInterface exifInterface = new ExifInterface(path);            // 获取图片的旋转信息            int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,                    ExifInterface.ORIENTATION_NORMAL);            switch (orientation) {                case ExifInterface.ORIENTATION_ROTATE_90:                    degree = 90;                    break;                case ExifInterface.ORIENTATION_ROTATE_180:                    degree = 180;                    break;                case ExifInterface.ORIENTATION_ROTATE_270:                    degree = 270;                    break;            }        } catch (IOException e) {            e.printStackTrace();        }        return degree;    }    /**     * 将图片按照某个角度进行旋转     *     * @param bm     *            需要旋转的图片     * @param degree     *            旋转角度     * @return 旋转后的图片     */    public static Bitmap rotateBitmapByDegree(Bitmap bm, int degree) {        Bitmap returnBm = null;        Matrix matrix = new Matrix();        matrix.postRotate(degree);        try {            returnBm = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);        } catch (OutOfMemoryError e) {        }        if (returnBm == null) {            returnBm = bm;        }        if (bm != returnBm) {            bm.recycle();        }        return returnBm;    }    public static Bitmap getPicture(File f) {        if (f.exists()) {            try {                if (f.exists()) {                    BitmapFactory.Options options = new BitmapFactory.Options();                    options.inJustDecodeBounds = true;                    Bitmap bmp = BitmapFactory.decodeFile(f.getAbsolutePath(), options);                    options.inJustDecodeBounds = false;                    int be = (int) (options.outHeight / (float) 300);                    if (be <= 0) {                        be = 1;                    }                    options.inSampleSize = be;                    bmp = BitmapFactory.decodeFile(f.getAbsolutePath(), options);                    return bmp;                }            } catch (Exception e) {                e.printStackTrace();            }        }        return null;    }}