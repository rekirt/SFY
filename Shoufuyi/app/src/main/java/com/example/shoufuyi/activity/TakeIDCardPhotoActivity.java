package com.example.shoufuyi.activity;import android.content.DialogInterface;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.Bundle;import android.text.TextUtils;import android.view.View;import android.widget.Button;import android.widget.ImageView;import com.alibaba.fastjson.JSON;import com.example.shoufuyi.R;import com.example.shoufuyi.api.ApiRequest;import com.example.shoufuyi.api.JsonHttpHandler;import com.example.shoufuyi.cache.FileUtils;import com.example.shoufuyi.cache.v2.CacheManager;import com.example.shoufuyi.uitls.Constant;import com.example.shoufuyi.uitls.SharedPreferencesHelper;import com.example.shoufuyi.uitls.ToastHelper;import com.example.shoufuyi.uitls.dialog.AlertDialogHelper;import com.example.shoufuyi.uitls.dialog.ChooseDialogDoClickHelper;import com.example.shoufuyi.uitls.dialog.DialogHelper;import com.example.shoufuyi.uitls.view.CardScanCameraActivity;import com.itech.message.APP_120008;import com.itech.message.FileMsg;import com.itech.message.Result_120023;import com.itech.utils.HashCodeUtils;import com.itech.utils.ZipDataUtils;import com.itech.utils.encoder.Base64Utils;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;/** * * Description:用于采集身份证照片 Created by Fu.H.L on Date:2015-9-22-上午12:52:34 * Copyright © 2015年 Fu.H.L All rights reserved. */public class TakeIDCardPhotoActivity extends BaseActivity {    private String returnAction = "android.intent.action.MAIN";    private String resultAction = "";    private Result_120023 mResult;    public static final String KEY_FILE_PATH1 = "pic_file_path1";    public static final String KEY_FILE_PATH2 = "pic_file_path2";    private String mIDCardFrontFilePath = "";    private String mIDCardBackFilePath = "";    private static final int TAKE_PICTURE1 = 0x000001;    private static final int TAKE_PICTURE2 = 0x000002;    protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_take_id_pic);        Intent intent = TakeIDCardPhotoActivity.this.getIntent();        Bundle bundle = intent.getExtras();        mResult = (Result_120023) bundle.get("info");		assignViews();		initData();        setCanBack(true);	}	private ImageView mIvFront;	private ImageView mIvBack;	private Button mBtnUpload;	private void assignViews() {		mIvFront = (ImageView) findViewById(R.id.iv_front);		mIvBack = (ImageView) findViewById(R.id.iv_back);		mBtnUpload = (Button) findViewById(R.id.btn_upload);	}	private void initData() {		mBtnUpload.setOnClickListener(this);		mIvBack.setOnClickListener(this);		mIvFront.setOnClickListener(this);	}	@Override	public void onClick(View arg0) {        super.onClick(arg0);		switch (arg0.getId()) {            case R.id.btn_upload:                if (TextUtils.isEmpty(mIDCardFrontFilePath) || TextUtils.isEmpty(mIDCardBackFilePath)) {                    ToastHelper.ShowToast("请先拍完所需照片");                } else {                    DialogHelper.showProgressDialog(TakeIDCardPhotoActivity.this, "正在上传...", true, false);                    upLoadImage();                }                break;            case R.id.iv_front:                takeIDCardPhoto(TAKE_PICTURE1);                break;            case R.id.iv_back:                takeIDCardPhoto(TAKE_PICTURE2);                break;            default:                break;		}	}    private String frontBase64Content = "";    private String backBase64Content = "";    private void upLoadImage() {        APP_120008 attachPost = new APP_120008();        attachPost.setAccountNo(mResult.getAccountNo());        attachPost.setIdCard(mResult.getIdCard());        attachPost.setMerchantId(mResult.getMerchantId());        attachPost.setTrxCode("120008");        attachPost.setUserName(SharedPreferencesHelper.getString(Constant.PHONE,""));//        attachPost.setVerifyCode("");        List<FileMsg> list = new ArrayList<FileMsg>();        FileMsg fileMsgFont = new FileMsg();        FileMsg fileMsgBack = new FileMsg();        attachPost.setVerifyItem("IDCARD_PHOTO");        try {                if ("" == frontBase64Content) {                    frontBase64Content = new String(                            ZipDataUtils.zipForBase64(Base64Utils                                    .fileToByte(mIDCardFrontFilePath)));                }                fileMsgFont.setContent(frontBase64Content);                fileMsgFont.setFileName("正面");                fileMsgFont.setIndex("1");                fileMsgFont.setAttachSecurCode(HashCodeUtils.hashCodeVaule(                        frontBase64Content.hashCode(),                        SharedPreferencesHelper.getString(Constant.UUID, "")));                list.add(fileMsgFont);                if ("" == backBase64Content) {                    backBase64Content = new String(                            ZipDataUtils.zipForBase64(Base64Utils                                    .fileToByte(mIDCardBackFilePath)));                }                fileMsgBack.setContent(backBase64Content);                fileMsgBack.setFileName("反面");                fileMsgBack.setIndex("2");                fileMsgBack.setAttachSecurCode(HashCodeUtils.hashCodeVaule(                        backBase64Content.hashCode(),                        SharedPreferencesHelper.getString(Constant.UUID, "")));                list.add(fileMsgBack);        } catch (Exception e) {            e.printStackTrace();        }        attachPost.setFileList(list);        UpLoadAttach(attachPost);    }    private void UpLoadAttach(final APP_120008 post) {        ApiRequest.requestData(post, SharedPreferencesHelper.getString(Constant.PHONE, ""), new JsonHttpHandler() {            @Override            public void onDo(JSONObject responseJsonObject) {                APP_120008 mReturnApp = JSON.parseObject(responseJsonObject.toString(), APP_120008.class);                if ("0000".equals(mReturnApp.getDetailCode())) {                    ToastHelper.ShowToast("上传成功");                    TakeIDCardPhotoActivity.this.finish();                } else {                    CacheManager.setCache(FileUtils.getCacheKey(mResult.getIdCard(), mResult.getAccountNo() + "_ID_CARD_PHOTO1"), frontBase64Content.getBytes(),                            Constant.CACHE_EXPIRE_OND_DAY, CacheManager.TYPE_INTERNAL);                    CacheManager.setCache(FileUtils.getCacheKey(mResult.getIdCard(), mResult.getAccountNo() + "_ID_CARD_PHOTO2"), backBase64Content.getBytes(),                            Constant.CACHE_EXPIRE_OND_DAY, CacheManager.TYPE_INTERNAL);                    ToastHelper.ShowToast("提示："+mReturnApp.getDetailInfo()+",已自动保存视频到本地数据库");                }            }            @Override            public void onDo(JSONArray responseJsonArray) {            }            @Override            public void onDo(String responseString) {            }            @Override            public void onFail(String msg) {                CacheManager.setCache(FileUtils.getCacheKey(mResult.getIdCard(), mResult.getAccountNo() + "_BANK_CARD_PHOTO1"), frontBase64Content.getBytes(),                        Constant.CACHE_EXPIRE_OND_DAY, CacheManager.TYPE_INTERNAL);                CacheManager.setCache(FileUtils.getCacheKey(mResult.getIdCard(), mResult.getAccountNo() + "_BANK_CARD_PHOTO2"), backBase64Content.getBytes(),                        Constant.CACHE_EXPIRE_OND_DAY, CacheManager.TYPE_INTERNAL);                ToastHelper.ShowToast("提示:"+msg+",已自动保存视频到本地数据库");            }            @Override            public void onFinish() {                DialogHelper.dismissProgressDialog();            }        });    }    private void takeIDCardPhoto(int requestCode){        Intent intentTack = new Intent(TakeIDCardPhotoActivity.this, CardScanCameraActivity.class);        intentTack.putExtra("devCode", Constant.devcode);        intentTack.putExtra("CopyrightInfo", "");        intentTack.putExtra("ReturnAciton", returnAction);        intentTack.putExtra("ResultAciton", resultAction);        startActivityForResult(intentTack, requestCode);    }	@Override	protected void onDestroy() {		super.onDestroy();	}    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        if (requestCode == TAKE_PICTURE1 && resultCode == RESULT_OK){            mIDCardFrontFilePath = data.getStringExtra("Path");            if (TextUtils.isEmpty(mIDCardFrontFilePath)) {                ToastHelper.ShowToast("图片路径错误");            }else {//                ImageHelper.displayImage("file://" + mBankCardFrontFilePath, mIvFront);                int l = data.getIntExtra("l", -1);                int t = data.getIntExtra("t", -1);                int w = data.getIntExtra("w", -1);                int h = data.getIntExtra("h", -1);                Bitmap bitmap = null;                try {                    bitmap = BitmapFactory.decodeFile(mIDCardFrontFilePath);                    bitmap = Bitmap.createBitmap(bitmap, l, t, w, h);                } catch (Exception e) {                    e.printStackTrace();                }                if (bitmap != null) {                    mIvFront.setImageBitmap(bitmap);                }            }        }else if (requestCode == TAKE_PICTURE2 && resultCode == RESULT_OK){            Bundle bundle = data.getExtras();            mIDCardBackFilePath = bundle.getString("Path");            if (TextUtils.isEmpty(mIDCardBackFilePath)) {                ToastHelper.ShowToast("图片路径错误");            }else {//                ImageHelper.displayImage("file://" + mBankCardBackFilePath, mIvBack);                int l = data.getIntExtra("l", -1);                int t = data.getIntExtra("t", -1);                int w = data.getIntExtra("w", -1);                int h = data.getIntExtra("h", -1);                Bitmap bitmap = null;                try {                    bitmap = BitmapFactory.decodeFile(mIDCardBackFilePath);                    bitmap = Bitmap.createBitmap(bitmap, l, t, w, h);                } catch (Exception e) {                    e.printStackTrace();                }                if (bitmap != null) {                    mIvBack.setImageBitmap(bitmap);                }            }        }    }    @Override    public void onBackPressed() {        if (TextUtils.isEmpty(mIDCardFrontFilePath) && TextUtils.isEmpty(mIDCardBackFilePath)) {            TakeIDCardPhotoActivity.this.finish();        } else {            AlertDialogHelper.showAlertDialog(TakeIDCardPhotoActivity.this,                    "提示：", "图片还未上传,是否退出?", new ChooseDialogDoClickHelper() {                        @Override                        public void doClick(DialogInterface dialog,                                            int which) {                            TakeIDCardPhotoActivity.this.finish();                        }                    });        }    }    @Override    public void goBack(View view) {        if (TextUtils.isEmpty(mIDCardFrontFilePath) && TextUtils.isEmpty(mIDCardBackFilePath)) {            TakeIDCardPhotoActivity.this.finish();        } else {            AlertDialogHelper.showAlertDialog(TakeIDCardPhotoActivity.this,                    "提示：", "图片还未上传,是否退出?", new ChooseDialogDoClickHelper() {                        @Override                        public void doClick(DialogInterface dialog,                                            int which) {                            TakeIDCardPhotoActivity.this.finish();                        }                    });        }    }}